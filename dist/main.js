/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("// const cursor = document.querySelector('.cursor')\n\n// const canvas = document.getElementById(\"canvas\");\n// console.log('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa');\n// const ctx = canvas.getContext('2d');\n\n// var bgImg = new Image();\n// bgImg.src = \"img/background.png\";\n// bgImg.onload = function() {\n//   ctx.drawImage(bgImg, 110, 200);\n// }\n\n// var img = new Image();\n// img.src = \"img/sprite8.png\";\n// img.onload = function(){\n//     ctx.drawImage(img, 140, 200);\n// };\n\n// const background = new Image();\n// background.src = 'img/background.bmp';\n// background.onload = function(){\n//     ctx.drawImage(background,0,0, canvas.width, canvas.height);   \n// }\n\nwindow.onload = function () {\n  // 1. Initializing game elements\n  const box = document.querySelector('.box');\n  const score = document.querySelector('.score');\n  const timebox = document.querySelector('.time');\n  const pauseButton = document.querySelector('.pause');\n  const startButton = document.querySelector('.start');\n  const restartButton = document.querySelector('.restart');\n  const gameoverBox = document.querySelector(\".gameover\");\n  let current_score = 0;\n  let timer = null;\n  let timeboxWidth = timebox.offsetWidth;\n  console.log(timeboxWidth);\n  // ture => game has started; false => game is paused\n  let gameState = true;\n\n  // seven positions for moles to show up [{}{}{}{}{}{}{}]\n  let sevenMolesPos = [{\n    top: \"11%\",\n    left: \"5.5%\"\n  }, {\n    top: \"8%\",\n    left: \"24.5%\"\n  }, {\n    top: \"11%\",\n    left: \"44.5%\"\n  }, {\n    top: \"25.5%\",\n    left: \"26.5%\"\n  }, {\n    top: \"27%\",\n    left: \"50%\"\n  }, {\n    top: \"40%\",\n    left: \"8.5%\"\n  }, {\n    top: \"41%\",\n    left: \"42.5%\"\n  }];\n\n  // seven positions for snakes to show up\n  let sevenSnakePos = [{\n    top: \"6%\",\n    left: \"5.5%\"\n  }, {\n    top: \"2.4%\",\n    left: \"24.5%\"\n  }, {\n    top: \"6%\",\n    left: \"44.5%\"\n  }, {\n    top: \"20.5%\",\n    left: \"26.5%\"\n  }, {\n    top: \"21.5%\",\n    left: \"50.5%\"\n  }, {\n    top: \"34.2%\",\n    left: \"8.5%\"\n  }, {\n    top: \"36%\",\n    left: \"42.5%\"\n  }];\n\n  // previous hole index\n  let prevIndex = -1;\n  // timer for generating moles\n  let moleTimer = null;\n  // mole shows up animation timer\n  let upTimer = null;\n  // mole goes down \n  let downTimer = null;\n\n  // sound effect \n  let hasSound = true;\n  // background music\n  // let hasBGM = true;\n  // const BGM = new Audio(\"audio/BGM.mp3\");\n  // BGM.loop = true;\n  // BGM.play();\n\n  // 2. Start game after clicking the start button\n  startButton.onclick = function () {\n    // hide start button after clicked\n    this.style.display = 'None';\n    // show pause button\n    pauseButton.style.display = 'block';\n    // start timer\n    timeReduce();\n    // display mole\n    showMole();\n  };\n  // 3. Start game timer\n  function timeReduce() {\n    timer = setInterval(function () {\n      timeboxWidth--;\n      timebox.style.width = timeboxWidth + \"px\";\n      if (timeboxWidth <= 0) {\n        clearInterval(timer);\n        // gamer over\n        gameover();\n      }\n    }, 50);\n  }\n\n  // 4. game over\n  function gameover() {\n    restartButton.style.display = \"block\";\n    gameoverBox.style.display = \"block\";\n\n    //stop generaing any mole\n    clearInterval(moleTimer);\n    alert(\"Game over!\");\n  }\n  // 5. pause game\n  pauseButton.onclick = function () {\n    if (gameState) {\n      // pause game timer\n      clearInterval(timer);\n      // pause generating mole\n      clearInterval(moleTimer);\n      // pause button => continue button\n      this.style.backgroundImage = \"url(img/restart.png)\";\n      gameState = false;\n    } else {\n      // start timer\n      timeReduce();\n      showMole();\n      // start button => pause button\n      this.style.backgroundImage = \"url(img/pause.png)\";\n      gamestate = true;\n    }\n  };\n  // 6. generate mole\n  async function addMole() {\n    // create imge\n    let mole = document.createElement(\"img\");\n    // i. mole or snake\n    mole.who = '';\n    let randomNumber = Math.floor(Math.random() * 10);\n    if (randomNumber === 0) {\n      mole.who = 's';\n    } else if (randomNumber === 9) {\n      mole.who = 'f';\n    } else mole.who = 'm';\n\n    // ii. which hole\n    // generate a random index 0-7\n    mole.holeIndex = Math.floor(Math.random() * 7);\n    // ensure no repetitive hole position\n    while (mole.holeIndex === prevIndex) {\n      mole.holeIndex = Math.floor(Math.random() * 7);\n    }\n    prevIndex = mole.holeIndex;\n    // 7. holes locations\n    // assign hole pos to mole\n    if (mole.who === 'm' || mole.who === 'f') {\n      mole.style.top = sevenMolesPos[mole.holeIndex].top;\n      mole.style.left = sevenMolesPos[mole.holeIndex].left;\n    }\n    // assign hole pos to snake\n    else if (mole.who === 's') {\n      mole.style.top = sevenSnakePos[mole.holeIndex].top;\n      mole.style.left = sevenSnakePos[mole.holeIndex].left;\n    }\n    // add mole image\n    // mole.src=\"img/m1.png\"\n\n    console.log(`${mole.who} is at hole ${mole.holeIndex}`);\n    box.appendChild(mole);\n    console.log(box.children);\n    // showing up\n    let upIndex = 0;\n    upTimer = setInterval(function () {\n      if (mole.who === 'm' || mole.who === 'f') {\n        mole.src = \"img/\" + mole.who + upIndex + \".png\";\n        upIndex++;\n        if (mole.who === 'm' && upIndex > 1) {\n          setTimeout(function () {}, 80);\n          mole.mineIndex = Math.floor(Math.random() * 7);\n          mole.src = \"img/m1\" + mole.mineIndex + \".png\";\n          clearInterval(upTimer);\n        } else if (mole.who === 'f' && upIndex > 1) {\n          setTimeout(function () {}, 80);\n          mole.src = \"img/f2.png\";\n          clearInterval(upTimer);\n        }\n      } else {\n        mole.src = \"img/s\" + upIndex + \".png\";\n        upIndex++;\n        if (upIndex > 2) {\n          clearInterval(upTimer);\n        }\n      }\n    }, 100);\n\n    // Going down\n    let downIndex = 1;\n    if (mole.who === 'm') {\n      await whack(mole);\n      // let moel stays for 1 sec\n      mole.out = setTimeout(function () {\n        downTimer = setInterval(function () {\n          mole.src = \"img/m\" + downIndex + \".png\";\n          downIndex--;\n          if (downIndex < 0) {\n            clearInterval(downTimer);\n            clearInterval(mole.out);\n            // delete mole element from box\n            box.removeChild(mole);\n          }\n        }, 80);\n      }, 1000);\n    } else if (mole.who === 'f') {\n      downIndex = 2;\n      await whack(mole);\n      mole.out = setTimeout(function () {\n        downTimer = setInterval(function () {\n          mole.src = \"img/f\" + downIndex + \".png\";\n          downIndex--;\n          if (downIndex < 0) {\n            clearInterval(downTimer);\n            clearInterval(mole.out);\n            // delete mole element from box\n            box.removeChild(mole);\n          }\n        }, 80);\n      }, 1000);\n    } else if (mole.who === 's') {\n      downIndex = 1;\n      await whack(mole);\n      mole.out = setTimeout(function () {\n        downTimer = setInterval(function () {\n          mole.src = \"img/s4.png\";\n          downIndex--;\n          // snake bite sound\n          const snakeSound = new Audio(\"audio/snake-attack.mp3\");\n          snakeSound.play();\n          if (downIndex < 0) {\n            clearInterval(downTimer);\n            clearInterval(mole.out);\n            // delete mole element from box\n            box.removeChild(mole);\n          }\n        }, 200);\n      }, 1000);\n    }\n  }\n\n  // gennerate many moles\n  function showMole() {\n    moleTimer = setInterval(function () {\n      addMole();\n    }, 1000);\n  }\n  // 8. whack a mole\n  async function whack(mole) {\n    mole.onclick = async function () {\n      // close downTimer before whacking\n      clearInterval(mole.out);\n      clearInterval(downTimer);\n      await whackAnimation(mole);\n      if (mole.who === 'm') {\n        switch (mole.mineIndex) {\n          case 0:\n            current_score += 5;\n            break;\n        }\n        current_score += 10;\n      } else if (mole.who === 'f') {\n        current_score -= 10;\n      }\n      score.innerHTML = current_score;\n    };\n  }\n  async function whackAnimation(mole) {\n    let hit = document.createElement(\"img\");\n    hit.style.top = sevenMolesPos[mole.holeIndex].top;\n    hit.style.left = sevenMolesPos[mole.holeIndex].left;\n    box.appendChild(hit);\n    let hitIndex = 0;\n    hitTimer = setInterval(function () {\n      hit.src = \"img/w\" + hitIndex + \".png\";\n      hitIndex++;\n      // play whack sound effect \n      if (hasSound && hitIndex === 2 && (mole.who === 'm' || mole.who === 's')) {\n        const hitSound = new Audio(\"audio/whack.mp3\");\n        hitSound.play();\n      } else if (hasSound && hitIndex === 2 && mole.who === 'f') {\n        const hitSound = new Audio(\"audio/wrong-whack.mp3\");\n        hitSound.play();\n      }\n      if (hitIndex > 5) {\n        clearInterval(hitTimer);\n        // clearInterval(mole.out);\n        // clearInterval(downTimer);\n        box.removeChild(hit);\n        if (mole.who === 'm') {\n          mole.hurt = setTimeout(function () {\n            mole.src = \"img/m2.png\";\n            let hurtIndex = 0;\n            hurtTimer = setInterval(function () {\n              mole.src = \"img/m1\" + mole.mineIndex + hurtIndex + \".png\";\n              hurtIndex++;\n              if (hurtIndex > 4) {\n                clearInterval(hurtTimer);\n                clearInterval(mole.hurt);\n                box.removeChild(mole);\n              }\n            }, 100);\n          }, 50);\n        } else if (mole.who === 'f') {\n          let hurtIndex = 0;\n          hurtTimer = setInterval(function () {\n            mole.src = \"img/f3.png\";\n            hurtIndex++;\n            if (hurtIndex > 1) {\n              clearInterval(hurtTimer);\n              box.removeChild(mole);\n            }\n          }, 100);\n        } else if (mole.who === 's') {\n          let hurtIndex = 0;\n          hurtTimer = setInterval(function () {\n            mole.src = \"img/s3.png\";\n            hurtIndex++;\n            if (hurtIndex > 1) {\n              clearInterval(hurtTimer);\n              box.removeChild(mole);\n            }\n          }, 100);\n        }\n      }\n    }, 80);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93aGFjay1hLW1vbGUvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;